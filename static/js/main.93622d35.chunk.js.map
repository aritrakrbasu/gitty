{"version":3,"sources":["logo.svg","profile.js","home.js","repos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","props","state","profile","repo","query","this","location","search","userid","substr","length","repo_query","fetch","then","res","json","push","newjson","prof","setState","map","key","login","className","href","name","html_url","bio","public_repos","public_gists","src","avatar_url","followers","following","icon","faMapMarkerAlt","id","fork","description","language","faCodeBranch","forks_count","faStar","stargazers_count","class","faHome","faTrophy","faEnvelope","faFileAlt","faUser","Component","Home","handleChange","bind","retriveData","e","document","getElementById","checkValidity","preventDefault","history","pathname","console","log","target","value","type","placeholder","onChange","required","App","exact","path","component","Repos","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93622d35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React , {Component} from 'react';\r\nimport './App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faMapMarkerAlt,faCodeBranch, faStar, faHeart,faHome, faTrophy, faEnvelope, faUser, faFileAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass  Profile extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            profile:null,\r\n            repo:null\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n     const query=this.props.location.search\r\n     const userid=(query.substr(1, query.length))\r\n     const profile_query='https://api.github.com/users/'+userid;\r\n     const repo_query=\"https://api.github.com/users/\"+userid+\"/repos?per_page=5&sort=created\"    \r\n\r\n     \r\n        fetch(profile_query)\r\n        .then(res =>res.json())\r\n        .then (json =>{\r\n            const profile=[]\r\n            profile.push(json)\r\n            return profile;\r\n        })\r\n        .then((profile)=>{\r\n            fetch(repo_query)\r\n            .then(res =>res.json())\r\n            .then (json =>{\r\n                const repo=[]\r\n                const newjson={\r\n                  prof:profile,\r\n                  repo:json\r\n                }\r\n                repo.push(newjson)\r\n                this.setState({profile:repo})\r\n            })\r\n                  \r\n                  \r\n        })\r\n        \r\n    }\r\n    render()\r\n    {\r\n    return (\r\n                <div>\r\n                {\r\n                  this.state.profile && this.state.profile.map(profile =>{\r\n                    return(\r\n                      <div key={profile.prof[0].login}>\r\n                    \r\n                                <div className=\"container-fluid d-none d-md-block\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-lg-2 theme-border-right\">\r\n                                    <aside className=\"side-menu\">\r\n                                      <div className=\"circle theme-bg text-center text-light\">AB</div>\r\n                                        <ul className=\"menu\">\r\n                                          <li className=\"active\"><a href=\"#\">Home</a></li>\r\n                                          <li><a href=\"repos.html\">Repos</a></li>\r\n                                          <li><a href=\"#\">Starred</a></li>\r\n                                          <li><a href=\"#\">Followers</a></li>\r\n                                          <li><a href=\"#\">Follings</a></li>\r\n                                        </ul>\r\n                                    </aside>\r\n                                  </div>\r\n                                  <div className=\"col-lg-6 about-me\">\r\n                                    <h1 className=\"name my-4\">{profile.prof[0].name}</h1>\r\n                                    <h1 className=\"tag my-4\"><a href={profile.prof[0].html_url}>@{profile.prof[0].login}</a></h1>\r\n                                    <h1 className=\"location-sm\"> <i className=\"fas fa-map-marker-alt \"></i>{profile.prof[0].location}</h1>\r\n                                    <h3 className=\"bio my-4\">{profile.prof[0].bio}</h3>\r\n                                    \r\n                                    <div className=\"buttons\">\r\n                                      <button className=\"btn theme-btn mt-4 theme-bg text-light\">Check Repos</button>\r\n                                      <button className=\"btn theme-btn mt-4\">Contact Me</button>\r\n                                    </div>\r\n                                    <div className=\"card-deck stats-card\">\r\n                                      <div className=\"card text-center\">\r\n                                        Repos <span> {profile.prof[0].public_repos}</span>\r\n                                      </div>\r\n                                      <div className=\"card text-center \">\r\n                                        Gists <span> {profile.prof[0].public_gists} </span>\r\n                                      </div>\r\n                                      \r\n                                      \r\n                                    </div>\r\n                                    \r\n                                  </div>\r\n                                  <div className=\"col-lg-4\">\r\n                                  <div className=\"profile-photo p-0\">\r\n                                    <img src={profile.prof[0].avatar_url}className=\"img-fluid\"/>\r\n                                  </div>\r\n                                  <div className=\"followers w-100\">\r\n                                    <table className=\"table\">\r\n                                      <tbody>\r\n                                      <tr>\r\n                                        <td> Followers</td>\r\n                                        <td> {profile.prof[0].followers}</td>\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td> Following</td>\r\n                                        <td> {profile.prof[0].following}</td>\r\n                                      </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"container-fluid d-md-none p-0\">\r\n                              \r\n                              <div className=\"container p-4 profile\">\r\n                              <div className=\"pattern\"></div>\r\n                                <div className=\"toggle-button\">\r\n                                  <i className=\"fas fa-bars fa-2x\"></i>\r\n                                </div>\r\n                                <div className=\"row py-4\">\r\n                                  <div className=\"col-4 profile-photo-sm p-2\">\r\n                                    <img src={profile.prof[0].avatar_url} className=\"img-fluid\"></img>\r\n                                  </div>\r\n                                  <div className=\"col-8 p-0\">\r\n                                    <h1 className=\"name-sm\"> {profile.prof[0].name} </h1>\r\n                                    <h1 className=\"location-sm\"> <FontAwesomeIcon  icon={faMapMarkerAlt}></FontAwesomeIcon > {profile.prof[0].location} </h1>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                                <div className=\"stats-card-sm\">\r\n                                  <ul className=\"stats-sm\">\r\n                                    <li> <span> {profile.prof[0].followers}</span> Followers</li>\r\n                                    <li> <span> {profile.prof[0].following}</span> Following</li>\r\n                                  </ul>\r\n                                </div>\r\n                                <div className=\"recent-repo\">\r\n                                  <h3 className=\"heading-sm-small p-4\"> Recent Repos</h3>\r\n                                  <ul className=\"repo\">\r\n                                 \r\n                                   {\r\n                                   profile.repo.map((repo)=>{\r\n                                    \r\n                                     return(\r\n                                     <li key={repo.id}><a href={repo.html_url}>\r\n                                     <span className=\"repo-name\">{repo.name}</span>\r\n                                     { repo.fork ?\r\n                                          <span className=\"repo-tag bg-grey\">Forked</span>\r\n                                          :  true\r\n                                        }\r\n                                     <span className=\"repo-desc\">{repo.description}</span>\r\n                                     <span className=\"repo-tag bg-grey my-2\">\r\n                                       <span className=\"dot\" id={repo.language}></span>\r\n                                      {repo.language}</span>\r\n                                     <ul className=\"repo-stat\">\r\n                                           <li><FontAwesomeIcon icon={faCodeBranch}></FontAwesomeIcon> {repo.forks_count}</li>\r\n                                           <li><FontAwesomeIcon icon={faStar}></FontAwesomeIcon> {repo.stargazers_count}</li>\r\n                                         </ul>\r\n                                         </a></li>\r\n                                     )\r\n                                   })\r\n                                   }\r\n                                      \r\n                                   \r\n                                 \r\n                                  </ul>\r\n                                  <div className=\"container text-center my-4\">\r\n                                    <button className=\"btn theme-btn m-auto\">Check All</button>\r\n                                  </div>\r\n                                  <div class=\"footer-mobile\">\r\n                                    <ul class=\"mobile-nav\">\r\n                                      <li> <FontAwesomeIcon icon={faHome}></FontAwesomeIcon></li>\r\n                                      <li> <FontAwesomeIcon icon={faTrophy}></FontAwesomeIcon></li>\r\n                                      <li class=\"action\"> <FontAwesomeIcon icon={faEnvelope}></FontAwesomeIcon></li>\r\n                                      <li> <FontAwesomeIcon icon={faFileAlt}></FontAwesomeIcon></li>\r\n                                      <li> <FontAwesomeIcon icon={faUser}></FontAwesomeIcon></li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              </div>\r\n                              \r\n                              \r\n                    )  \r\n                  }) \r\n                }\r\n                \r\n                </div>\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n  export default Profile;\r\n  ","import React , {Component} from 'react';\r\nimport './App.css';\r\n\r\nclass  Home extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            profile:null,\r\n            userid:null\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.retriveData=this.retriveData.bind(this)\r\n    }\r\n    retriveData(e)\r\n    {\r\n      document.getElementById('search-form').checkValidity();\r\n      e.preventDefault();\r\n      this.props.history.push({\r\n        pathname: '/profile',\r\n        search: this.state.userid,\r\n\r\n      })\r\n     console.log(this.props)\r\n    }\r\n    handleChange(e)\r\n    {\r\n      this.setState({[e.target.name]: e.target.value});\r\n    }\r\n  \r\n    render()\r\n    {\r\n    return (\r\n      <div class=\"intro\">\r\n      <div class=\"container-fluid text-center\">\r\n      <div class=\"gitty-desc\">\r\n        <h1 class=\"heading-sm-big\"> Gitty </h1>\r\n        <h1 class=\"heading-sm-small\"> Modern github profile </h1>\r\n      </div>\r\n      <div class=\"search-form-section\">\r\n        <form class=\"search-form text-left\" id=\"search-form\">\r\n          <label> Github userid </label>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" \r\n             name=\"userid\" \r\n             className =\"form-control\" \r\n              id=\"userid\" \r\n             placeholder=\"UserId\" \r\n             value={this.state.userid} \r\n             onChange={this.handleChange} \r\n             required  />\r\n          </div>\r\n          <input type=\"submit\" class=\"btn theme-btn my-4\"  name=\"s\" value=\"s\" value=\"search now\" onClick={this.retriveData}></input>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <footer class=\"text-center p-4 bg-black text-light\">\r\n          <h2> Fork me in github <i class=\"fas fa-heart\"></i></h2>\r\n    </footer>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n  export default Home;\r\n  ","import React , {Component} from 'react';\r\nimport './App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faMapMarkerAlt,faCodeBranch, faStar, faHeart,faHome, faTrophy, faEnvelope, faUser, faFileAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass  Profile extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            profile:null,\r\n            repo:null\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n     const query=this.props.location.search\r\n     const userid=(query.substr(1, query.length))\r\n     const profile_query='https://api.github.com/users/'+userid;\r\n     const repo_query=\"https://api.github.com/users/\"+userid+\"/repos?per_page=1000&sort=created\"    \r\n\r\n     \r\n        fetch(profile_query)\r\n        .then(res =>res.json())\r\n        .then (json =>{\r\n            const profile=[]\r\n            profile.push(json)\r\n            return profile;\r\n        })\r\n        .then((profile)=>{\r\n            fetch(repo_query)\r\n            .then(res =>res.json())\r\n            .then (json =>{\r\n                const repo=[]\r\n                const newjson={\r\n                  prof:profile,\r\n                  repo:json\r\n                }\r\n                repo.push(newjson)\r\n                this.setState({profile:repo})\r\n                console.log(json.length)\r\n            })\r\n                  \r\n                  \r\n        })\r\n        \r\n    }\r\n    render()\r\n    {\r\n    return (\r\n                <div>\r\n                {\r\n                  this.state.profile && this.state.profile.map(profile =>{\r\n                    return(\r\n                      <div key={profile.prof[0].login}>\r\n                    \r\n                               \r\n                              <div className=\"container-fluid d-md-none p-0\">\r\n                              \r\n                                <div className=\"recent-repo\">\r\n                                  <h3 className=\"heading-sm-small p-4\"> Recent Repos</h3>\r\n                                  <ul className=\"repo\">\r\n                                 \r\n                                   {\r\n                                   profile.repo.map((repo)=>{\r\n                                    \r\n                                     return(\r\n                                     <li key={repo.id}><a href={repo.html_url}>\r\n                                     <span className=\"repo-name\">{repo.name}</span>\r\n                                     { repo.fork ?\r\n                                          <span className=\"repo-tag bg-grey\">Forked</span>\r\n                                          :  true\r\n                                        }\r\n                                     <span className=\"repo-desc\">{repo.description}</span>\r\n                                     <span className=\"repo-tag bg-grey my-2\">\r\n                                       <span className=\"dot\" id={repo.language}></span>\r\n                                      {repo.language}</span>\r\n                                     <ul className=\"repo-stat\">\r\n                                           <li><FontAwesomeIcon icon={faCodeBranch}></FontAwesomeIcon> {repo.forks_count}</li>\r\n                                           <li><FontAwesomeIcon icon={faStar}></FontAwesomeIcon> {repo.stargazers_count}</li>\r\n                                         </ul>\r\n                                         </a></li>\r\n                                     )\r\n                                   })\r\n                                   }\r\n                                      \r\n                                   \r\n                                 \r\n                                  </ul>\r\n                                  <div className=\"container text-center my-4\">\r\n                                    <button className=\"btn theme-btn m-auto\">Check All</button>\r\n                                  </div>\r\n                                  <div class=\"footer-mobile\">\r\n                                    <ul class=\"mobile-nav\">\r\n                                      <li> <FontAwesomeIcon icon={faHome}></FontAwesomeIcon></li>\r\n                                      <li> <FontAwesomeIcon icon={faTrophy}></FontAwesomeIcon></li>\r\n                                      <li class=\"action\"> <FontAwesomeIcon icon={faEnvelope}></FontAwesomeIcon></li>\r\n                                      <li> <FontAwesomeIcon icon={faFileAlt}></FontAwesomeIcon></li>\r\n                                      <li> <FontAwesomeIcon icon={faUser}></FontAwesomeIcon></li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              </div>\r\n                              \r\n                              \r\n                    )  \r\n                  }) \r\n                }\r\n                \r\n                </div>\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n  export default Profile;\r\n  ","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Profile from'./profile'; \r\nimport Home from'./home'; \r\nimport Repos from'./repos'; \r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home}></Route>\r\n      <Route exact path=\"/profile\" component={Profile}></Route>\r\n      <Route exact path=\"/repo\" component={Repos}></Route>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport'bootstrap/dist/css/bootstrap.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}