{"version":3,"sources":["home.js","App.js","serviceWorker.js","index.js"],"names":["Home","useState","profile","setProfile","profileLanguages","setProfileLanguages","profileRepos","setProfileRepos","filteredRepos","setFilteredRepos","profileStatus","setProfileStatus","darkMode","setDarkMode","modeRef","useRef","searchRepoRef","handleClick","filter","filteredRepolist","profileRepo","language","useEffect","headers","btoa","search","window","location","userid","URLSearchParams","get","console","log","fetch","then","res","json","message","languages","forEach","element","includes","push","className","Container","fluid","Row","Col","href","html_url","name","match","class","for","title","type","id","onChange","current","checked","ref","icon","faEnvelope","lg","login","src","avatar_url","faMapMarkerAlt","hireable","sm","faChild","followers","faRunning","following","company","faBuilding","bio","length","map","profileLanguage","public_repos","Button","variant","onClick","Form","Group","controlId","Label","Control","placeholder","value","filteredRepo","target","description","faEye","watchers","faStar","stargazers_count","faCodeBranch","forks","faSadTear","App","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ddebd7c0.chunk.js","sourcesContent":["import { faBuilding, faChild, faCodeBranch, faEnvelope, faEye, faMapMarkerAlt, faRunning, faSadTear, faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\n\r\nfunction Home() {\r\n  const [profile, setProfile] = useState({})\r\n  const [profileLanguages, setProfileLanguages] = useState([])\r\n  const [profileRepos, setProfileRepos] = useState([])\r\n  const [filteredRepos, setFilteredRepos] = useState([])\r\n  const [profileStatus, setProfileStatus] = useState(false)\r\n  const [darkMode , setDarkMode] =useState(false)\r\n  const modeRef = useRef()\r\n  const searchRepoRef = useRef()\r\n\r\n  useEffect(() => {\r\n   \r\n    const username=\"aritrakrbasu\"\r\n    const password=\"runabasu71\"\r\n    const headers={\r\n      \"Authorization\" : `Basic ${btoa(`${username}:${password}`)}`\r\n    }\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let userid = params.get('id');\r\n    console.log(userid)\r\n    if(userid !== null)\r\n    {\r\n      //profile details \r\n      const profile_query='https://api.github.com/users/'+userid;\r\n      fetch(profile_query , {\r\n        \"method\":\"GET\",\r\n        \"headers\":headers\r\n      })\r\n        .then(res =>res.json())\r\n        .then (json =>{\r\n          if(json.message !== \"Not Found\")\r\n          {\r\n            setProfile(json)\r\n            console.log(json)\r\n          }\r\n          else\r\n          {\r\n            setProfileStatus(true)\r\n          }\r\n        })\r\n\r\n        \r\n      //language details\r\n      const profile_language_query='https://api.github.com/users/'+userid+'/repos';\r\n      fetch(profile_language_query, {\r\n        \"method\":\"GET\",\r\n        \"headers\":headers\r\n      })\r\n        .then(res =>res.json())\r\n        .then (json =>{\r\n          var languages =[];\r\n          console.log(json)\r\n          if(json.message !=='Not Found')\r\n          {\r\n            json.forEach(element => {\r\n              if(element.language!==null && !languages.includes(element.language))\r\n              {\r\n                languages.push(element.language)\r\n              }\r\n            });\r\n            setProfileLanguages(languages)\r\n          }\r\n          \r\n        })\r\n\r\n      //repo details\r\n      const repo_query=\"https://api.github.com/users/\"+userid+\"/repos?per_page=100&sort=created\"\r\n      fetch(repo_query, {\r\n        \"method\":\"GET\",\r\n        \"headers\":headers\r\n      })\r\n      .then(res =>res.json())\r\n      .then (json =>{\r\n        setProfileRepos(json)\r\n        setFilteredRepos(json)\r\n      })\r\n\r\n    }else\r\n    {\r\n      setProfileStatus(true)\r\n    }\r\n   \r\n  }, [])\r\n\r\n  function handleClick(filter)\r\n  {\r\n    if(filter !== 'all')\r\n    {\r\n      const filteredRepolist = profileRepos.filter(profileRepo => profileRepo.language==filter)\r\n      setFilteredRepos(filteredRepolist)\r\n    }\r\n    else\r\n    {\r\n      setFilteredRepos(profileRepos)\r\n    }\r\n  }\r\n\r\n  function modeToggle()\r\n  {\r\n    setDarkMode(modeRef.current.checked)\r\n  }\r\n\r\n  function searchRepo()\r\n  {\r\n      const filteredRepolist = profileRepos.filter(profileRepo => profileRepo.name.includes(searchRepoRef.current.value))\r\n      setFilteredRepos(filteredRepolist)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {!profileStatus && (\r\n      <body className={darkMode && (\"darkmode\")}>\r\n      <Container fluid>\r\n      <Row>\r\n        <Col>\r\n         <div className=\"nav\">\r\n           <a href={profile.html_url}><div className=\"nav-logo\">{profile.name && profile.name.match(/\\b(\\w)/g)}</div></a>\r\n         </div>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"nav-right\">\r\n              <label class=\"switch\" for=\"checkbox\" title=\"Change color scheme to dark mode\">\r\n                <input type=\"checkbox\" id=\"checkbox\" onChange={modeToggle} ref={modeRef} />\r\n                <div class=\"slider round\"></div>\r\n                <div class=\"toggle-moon\">🌙</div>\r\n                <div class=\"toggle-sun\">☀️</div>\r\n              </label>\r\n            <a href=\"#\"><div className=\"nav-btn\"><FontAwesomeIcon icon={faEnvelope} /> <span>Contact me</span></div></a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n      <Container fluid>\r\n      <Row>\r\n        <Col lg={5}>\r\n          <div className=\"profile-section\">\r\n            <a href={profile.html_url}><div className=\"profile-username\"> {'@'+profile.login} </div></a>\r\n            <div className=\"profile-name\"> {profile.name} </div>\r\n            <div className=\"profile-image\"> \r\n              <img src={profile.avatar_url} /> \r\n              <div className=\"profile-bg\"></div>\r\n            </div>\r\n           \r\n              \r\n                {profile.location && ( \r\n                <div className=\"profile-location\">\r\n                  <div className=\"profile-location-icon\">\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n                  </div>\r\n                <div className=\"profile-location-text\">{profile.location}</div>\r\n                </div>\r\n                )}\r\n              \r\n            \r\n              {profile.hireable && (<div className=\"profile-hire-status\">AVAILABLE FOR HIRE</div>)}\r\n          </div>\r\n        </Col>\r\n        <Col lg={7}>\r\n          <div className=\"about-section bl\">\r\n            <div className=\"about-stats\">\r\n              <Container fluid>\r\n                <Row>\r\n                  <Col>\r\n                    <div className =\"about-profile\">\r\n                      <Row>\r\n                        <Col sm={2} className=\"abouts-stats\">\r\n                          <span className=\"ico\">\r\n                          <FontAwesomeIcon icon={faChild} />\r\n                          </span>\r\n                        </Col>\r\n                        <Col className=\"abouts-stats\">\r\n                          <h2> Followers</h2>\r\n                          <h3>{profile.followers}</h3>\r\n                        </Col>\r\n                      </Row>\r\n                      \r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"bl bl-sm pl-5\">\r\n                    <div className =\"about-profile\">\r\n                      <Row>\r\n                        <Col sm={2} className=\"abouts-stats\"><span className=\"ico\"><FontAwesomeIcon icon={faRunning} /></span></Col>\r\n                        <Col className=\"abouts-stats\">\r\n                          <h2> Following</h2>\r\n                          <h3>{profile.following}</h3>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n              {profile.company && (\r\n                     <Container fluid>\r\n                       <Row>\r\n                       <Col>\r\n                        <div className =\"about-profile\">\r\n                          <Row>\r\n                            <Col sm={1} className=\"abouts-stats\"><span className=\"ico\"><FontAwesomeIcon icon={faBuilding} /></span></Col>\r\n                            <Col className=\"abouts-stats\">\r\n                              <h2> Company</h2>\r\n                              <h3>{profile.company}</h3>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Col>\r\n                       </Row>\r\n                   </Container>\r\n                  )}\r\n            </div>\r\n            <div className =\"about-profile\">\r\n              {profile.bio && (\r\n                <>\r\n                <h1>About</h1>\r\n                <p>\r\n                {profile.bio}\r\n                </p> \r\n                </>\r\n              )} \r\n            </div>\r\n            <div className =\"about-profile\">\r\n              <h1>Languages <span>{profileLanguages.length}</span> </h1>\r\n              <ul className=\"skills\">\r\n                {profileLanguages && profileLanguages.map(profileLanguage =>{\r\n                  return(\r\n                    <li> <img src=\"https://svgsilh.com/svg/26432.svg\"></img> {profileLanguage}</li>\r\n                  )\r\n                })}\r\n              </ul>\r\n            </div>\r\n           \r\n            <div className=\"project-section\">\r\n              <div className =\"about-profile\">\r\n                <h1>Projects <span>{profile.public_repos}</span></h1>\r\n                <ul className=\"filter-btn\">\r\n                  <li className=\"filter-text\">Filters :</li>\r\n                  <Button variant=\"light\" onClick={()=>handleClick('all')}><li>All</li></Button>\r\n                  {profileLanguages && profileLanguages.map(profileLanguage =>{\r\n                    return(\r\n                      <Button variant=\"light\" onClick={()=>handleClick(profileLanguage)}><li>{profileLanguage}</li></Button>\r\n                    )\r\n                  })}\r\n                  <Button variant=\"light\" onClick={()=>handleClick(null)}><li>Others</li></Button>\r\n                </ul>\r\n              </div>\r\n              <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Label>Search Repo</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"Repo Name\" onChange={searchRepo} ref={searchRepoRef} />\r\n                </Form.Group>\r\n              </Form>\r\n              {filteredRepos.length > 0 && filteredRepos.map(filteredRepo =>{\r\n                return(\r\n                  <div className=\"project-item\">\r\n                    <a href={filteredRepo.html_url} target=\"_blank\"><div className=\"project-title\">{filteredRepo.name}</div></a>\r\n                    <div className=\"project-link\">{filteredRepo.html_url}</div>\r\n                    <div className=\"project-desc\">{filteredRepo.description}</div>\r\n                    <div className=\"project-tags\">{filteredRepo.language && (<span>{filteredRepo.language}</span>)}</div>\r\n                    <div className=\"project-footer-ico\">\r\n                      <ul className=\"footer-ico\">\r\n                        <li><FontAwesomeIcon icon={faEye} /> <span>{filteredRepo.watchers}</span></li>\r\n                        <li><FontAwesomeIcon icon={faStar} /> {filteredRepo.stargazers_count}</li>\r\n                        <li><FontAwesomeIcon icon={faCodeBranch} /> {filteredRepo.forks}</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </body>\r\n    )}\r\n    {profileStatus && (\r\n      <div className=\"profile-not-found\">\r\n        <FontAwesomeIcon icon={faSadTear} />\r\n        Profile not Found\r\n      </div>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from'./home'; \r\n// import Repos from'./repos'; \r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" component={Home}></Route>\r\n      {/* <Route exact path=\"/profile\" component={Profile}></Route>\r\n      <Route exact path=\"/repo\" component={Repos}></Route> */}\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport'bootstrap/dist/css/bootstrap.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}